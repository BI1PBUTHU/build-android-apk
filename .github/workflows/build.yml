name: android_build

on:
  workflow_dispatch:
    inputs:
      project_url:
        description: 'Enter the URL of the Android project repository'
        required: true
        default: 'https://github.com/BI1PBUTHU/MobileIMSDK'
        type: string
      project_subdir:
        description: 'Enter the subdirectory path of the Android project within the repository (relative to root)'
        required: true
        default: 'demo_src/TCP_Client/MobileIMSDK4aDemo_tcp'
        type: string
      gradle_version:
        description: 'Enter the Gradle version to use'
        required: true
        default: '8.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Clone project repository
        run: |
          echo "Cloning repository: ${{ github.event.inputs.project_url }}"
          git clone --depth=1 ${{ github.event.inputs.project_url }} project

      - name: Install Gradle
        run: |
          echo "Installing Gradle version: ${{ github.event.inputs.gradle_version }}"
          wget https://services.gradle.org/distributions/gradle-${{ github.event.inputs.gradle_version }}-bin.zip
          mkdir -p /home/runner/gradle
          unzip -d /home/runner/gradle gradle-${{ github.event.inputs.gradle_version }}-bin.zip
          export PATH="/home/runner/gradle/gradle-${{ github.event.inputs.gradle_version }}/bin:$PATH"

      - name: Configure Gradle
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.jvmargs=-Xmx2g -XX:MaxPermSize=512m" >> ~/.gradle/gradle.properties
          echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties

      - name: Build the app
        working-directory: ./project/${{ github.event.inputs.project_subdir }}
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew
          ./gradlew clean assembleDebug --stacktrace --warning-mode all

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: my-build-apk
          path: ./project/${{ github.event.inputs.project_subdir }}/app/build/outputs/apk/debug/*.apk
